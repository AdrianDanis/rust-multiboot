var searchIndex = {};
searchIndex['multiboot'] = {"items":[[0,"","multiboot","Multiboot v1 library",null,null],[3,"Multiboot","","Multiboot struct clients mainly interact with\nTo create this use Multiboot::new()",null,null],[3,"BootDevice","","The ‘boot_device’ field.",null,null],[12,"drive","","Contains the bios drive number as understood by\nthe bios INT 0x13 low-level disk interface: e.g. 0x00 for the\nfirst floppy disk or 0x80 for the first hard disk.",0,null],[12,"partition1","","Specifies the top-level partition number.",0,null],[12,"partition2","","Specifies a sub-partition in the top-level partition",0,null],[12,"partition3","","Specifies a sub-partition in the 2nd-level partition",0,null],[3,"MemoryEntry","","Multiboot format of the MMAP buffer.",null,null],[3,"MemoryMapIter","","Used to iterate over all memory regions provided by multiboot.",null,null],[3,"Module","","Information about a module in multiboot.",null,null],[12,"start","","Start address of module in physical memory.",1,null],[12,"end","","End address of module in physic memory.",1,null],[12,"string","","Name of the module.",1,null],[3,"ModuleIter","","Used to iterate over all modules in multiboot.",null,null],[4,"MemoryType","","Types that define if the memory is usable or not.",null,null],[13,"RAM","","",2,null],[13,"Unusable","","",2,null],[6,"PAddr","","",null,null],[17,"SIGNATURE_RAX","","Value found in %rax after multiboot jumps to our entry point.",null,null],[11,"new","","Initializes the multiboot structure.",3,null],[11,"lower_memory_bound","","Indicate the amount of lower memory in kilobytes.",3,{"inputs":[{"name":"multiboot"}],"output":{"name":"option"}}],[11,"upper_memory_bound","","Indicate the amount of upper memory in kilobytes.",3,{"inputs":[{"name":"multiboot"}],"output":{"name":"option"}}],[11,"boot_device","","Indicates which bios disk device the boot loader loaded the OS image from.",3,{"inputs":[{"name":"multiboot"}],"output":{"name":"option"}}],[11,"command_line","","Command line to be passed to the kernel.",3,{"inputs":[{"name":"multiboot"}],"output":{"name":"option"}}],[11,"modules","","Discover all additional modules in multiboot.",3,{"inputs":[{"name":"multiboot"}],"output":{"name":"option"}}],[11,"memory_regions","","Discover all memory regions in the multiboot memory map.",3,{"inputs":[{"name":"multiboot"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"bootdevice"}],"output":{"name":"bootdevice"}}],[11,"fmt","","",0,{"inputs":[{"name":"bootdevice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partition1_is_valid","","Is partition1 a valid partition?",0,{"inputs":[{"name":"bootdevice"}],"output":{"name":"bool"}}],[11,"partition2_is_valid","","Is partition2 a valid partition?",0,{"inputs":[{"name":"bootdevice"}],"output":{"name":"bool"}}],[11,"partition3_is_valid","","Is partition3 a valid partition?",0,{"inputs":[{"name":"bootdevice"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"memorytype"},{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"memorytype"},{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"memorytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"memoryentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"base_address","","Get base of memory region.",4,{"inputs":[{"name":"memoryentry"}],"output":{"name":"paddr"}}],[11,"length","","Get size of the memory region.",4,{"inputs":[{"name":"memoryentry"}],"output":{"name":"u64"}}],[11,"memory_type","","Is the region type valid RAM?",4,{"inputs":[{"name":"memoryentry"}],"output":{"name":"memorytype"}}],[11,"next","","",5,{"inputs":[{"name":"memorymapiter"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"module"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",6,{"inputs":[{"name":"moduleiter"}],"output":{"name":"option"}}]],"paths":[[3,"BootDevice"],[3,"Module"],[4,"MemoryType"],[3,"Multiboot"],[3,"MemoryEntry"],[3,"MemoryMapIter"],[3,"ModuleIter"]]};
initSearch(searchIndex);
